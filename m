Return-Path: <sparclinux-owner@vger.kernel.org>
X-Original-To: lists+sparclinux@lfdr.de
Delivered-To: lists+sparclinux@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 34C6F2E767F
	for <lists+sparclinux@lfdr.de>; Wed, 30 Dec 2020 07:28:14 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726318AbgL3G1u (ORCPT <rfc822;lists+sparclinux@lfdr.de>);
        Wed, 30 Dec 2020 01:27:50 -0500
Received: from mga07.intel.com ([134.134.136.100]:26792 "EHLO mga07.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726185AbgL3G1u (ORCPT <rfc822;sparclinux@vger.kernel.org>);
        Wed, 30 Dec 2020 01:27:50 -0500
IronPort-SDR: IwS+zkIrhflY3WRIk9gb+BVYbvbqX2VEfLdHzCmNXLzULZdmCvVRs8aEo5YpXlxrKK9R4wPn7U
 VHTkgU32Sm1A==
X-IronPort-AV: E=McAfee;i="6000,8403,9849"; a="240655706"
X-IronPort-AV: E=Sophos;i="5.78,460,1599548400"; 
   d="scan'208";a="240655706"
Received: from orsmga003.jf.intel.com ([10.7.209.27])
  by orsmga105.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 29 Dec 2020 22:27:09 -0800
IronPort-SDR: VXiFduE3H6+63s6BkUdZSE0AfypznpTtaRlXuzNAW2J9M7zs1hv/TIuUeue/GJVXIY37mk6YRk
 XDmuMTktUwkQ==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.78,460,1599548400"; 
   d="scan'208";a="344293808"
Received: from lkp-server02.sh.intel.com (HELO 4242b19f17ef) ([10.239.97.151])
  by orsmga003.jf.intel.com with ESMTP; 29 Dec 2020 22:27:06 -0800
Received: from kbuild by 4242b19f17ef with local (Exim 4.92)
        (envelope-from <lkp@intel.com>)
        id 1kuUws-00044J-15; Wed, 30 Dec 2020 06:27:06 +0000
Date:   Wed, 30 Dec 2020 14:26:07 +0800
From:   kernel test robot <lkp@intel.com>
To:     Sam Ravnborg <sam@ravnborg.org>,
        David S Miller <davem@davemloft.net>,
        sparclinux@vger.kernel.org, Andreas Larsson <andreas@gaisler.com>,
        Arnd Bergmann <arnd@kernel.org>
Cc:     kbuild-all@lists.01.org, Alexey Dobriyan <adobriyan@gmail.com>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Andrew Morton <akpm@linux-foundation.org>,
        Linux Memory Management List <linux-mm@kvack.org>,
        Anshuman Khandual <anshuman.khandual@arm.com>,
        Arvind Sankar <nivedita@alum.mit.edu>
Subject: [PATCH] sparc32: fix badzero.cocci warnings
Message-ID: <20201230062607.GA28938@9652415528d2>
References: <20201218184347.2180772-12-sam@ravnborg.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20201218184347.2180772-12-sam@ravnborg.org>
X-Patchwork-Hint: ignore
User-Agent: Mutt/1.10.1 (2018-07-13)
Precedence: bulk
List-ID: <sparclinux.vger.kernel.org>
X-Mailing-List: sparclinux@vger.kernel.org

From: kernel test robot <lkp@intel.com>

arch/sparc/mm/srmmu.c:317:42-43: WARNING comparing pointer to 0
arch/sparc/mm/srmmu.c:317:42-43: WARNING comparing pointer to 0

 Compare pointer-typed values to NULL rather than 0

Semantic patch information:
 This makes an effort to choose between !x and x == NULL.  !x is used
 if it has previously been used with the function used to initialize x.
 This relies on type information.  More type information can be obtained
 using the option -all_includes and the option -I to specify an
 include path.

Generated by: scripts/coccinelle/null/badzero.cocci

CC: Sam Ravnborg <sam@ravnborg.org>
Reported-by: kernel test robot <lkp@intel.com>
Signed-off-by: kernel test robot <lkp@intel.com>
---

url:    https://github.com/0day-ci/linux/commits/Sam-Ravnborg/sparc32-sunset-sun4m-and-sun4d/20201219-025354
base:   https://git.kernel.org/pub/scm/linux/kernel/git/soc/soc.git for-next

 srmmu.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/arch/sparc/mm/srmmu.c
+++ b/arch/sparc/mm/srmmu.c
@@ -314,7 +314,7 @@ pgtable_t pte_alloc_one(struct mm_struct
 	pte_t *ptep;
 	struct page *page;
 
-	if ((ptep = pte_alloc_one_kernel(mm)) == 0)
+	if ((ptep = pte_alloc_one_kernel(mm)) == NULL)
 		return NULL;
 	page = pfn_to_page(__nocache_pa((unsigned long)ptep) >> PAGE_SHIFT);
 	spin_lock(&mm->page_table_lock);
